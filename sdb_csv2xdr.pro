;+
;
; NAME:
;         sdb_csv2xdr
;
; PURPOSE:
;         Load a text/csv file of photometry and stellar parameters
;
; CATEGORY:
;         sdb
;
; EXPLANATION:
;         Load a csv file generated by sdb_getphot.py into a IDL save file. These are of
;         the format sdbid-rawphot.txt, and the output will be sdbid.xdr
;
; SYNTAX:
;         sdb_csv2xdr(file,xdr=xdr)
;
; INPUTS:
;         file: csv file to load
;
; MODIFICATION HISTORY:
;         created from sedfit_loadcsv early Sept 2016
;
;-

pro sdb_csv2xdr,file

  ;; do recursively if many files given
  if N_ELEMENTS(file) gt 1 then begin
     for i=0,N_ELEMENTS(file)-1 do sdb_csv2xdr,file[i]
     return
  endif

    ;; figure save file name
  base = STR_REPLACE(file,'-rawphot.txt','')
  xdr = base+'.xdr'
  if FILE_TEST(xdr) then begin
     print,"Not overwriting existing xdr file:"+xdr
     return
  endif
  
  ;; get stuff in text file
  nl = FILE_LINES(file[0])
  OPENR,lun,file,/GET_LUN
  ls = STRARR(nl)
  READF,lun,ls
  CLOSE,lun
  FREE_LUN,lun

  ;; mark lines we want
  info = INTARR(nl)             ; 0 for photometry, 1 for stellar, 2 for nothing
  for i=0,nl-1 do begin
     if STREGEX(ls[i],'=',/BOOLEAN) then info[i] = 1
     if STREGEX(ls[i],'^[ \t]*#|^[ \t]*$',/BOOL) then info[i] = 2 ; ignore these more strongly
  endfor

  ;; defaults
  name = STRING('')
  spty = STRING('')
  teff = !VALUES.F_NAN
  tefferr = !VALUES.F_NAN
  logg = !VALUES.F_NAN
  mh = !VALUES.F_NAN
  av = !VALUES.F_NAN
  dist = !VALUES.F_NAN
  delvarx,irsfile

  ;; loop and get stuff
  sys = 0
  tmp = WHERE(info eq 0,nphot)
  if STREGEX(ls[tmp[0]],',',/BOOLEAN) then csv = 1 else csv = 0
  for i=0,nl-1 do begin

     ;; decide whether systematic errors were given
     if info[i] eq 2 then begin
        if STREGEX(ls[i],'sys',/FOLD_CASE,/BOOLEAN) then sys = 1
        CONTINUE                ; comment lines
     endif

     if info[i] eq 1 then begin
        if STREGEX(ls[i],'^id',/FOLD_CASE,/BOOLEAN) then begin
           tmp = STRSPLIT(ls[i],'=',/EXTRACT)
           name = tmp[1]
        endif
        if STREGEX(ls[i],'sp_type',/FOLD_CASE,/BOOLEAN) then begin
           tmp = STRSPLIT(ls[i],'=',/EXTRACT)
           spty = tmp[1]
        endif
        if STREGEX(ls[i],'plx_value',/FOLD_CASE,/BOOLEAN) then begin
           tmp = STRSPLIT(ls[i],'=',/EXTRACT)
           dist = 1e3/FLOAT(tmp[1])
        endif
        if STREGEX(ls[i],'irsstare',/FOLD_CASE,/BOOLEAN) then begin
           tmp = STRSPLIT(ls[i],'=',/EXTRACT)
           push,irsfile,tmp[1]
        endif
     endif

     if info[i] eq 0 then begin
        if csv then tmp = STRSPLIT(ls[i],',',/EXTRACT,COUNT=n) else tmp = STRSPLIT(ls[i],' |	',/REGEX,/EXTRACT,COUNT=n)
        push,band,tmp[0]
        push,meas,FLOAT(tmp[1])
        push,errs,FLOAT(tmp[2])
        if KEYWORD_SET(sys) then begin
           push,syserr,FLOAT(tmp[3])
           push,lim,ROUND(FLOAT(tmp[4]))
           push,unit,tmp[5]
           push,ref,tmp[6]
           ;; if n gt 7 then push,note1,tmp[7] else push,note1,''
           ;; if n gt 8 then push,note2,tmp[8] else push,note2,''
           ;; if n gt 9 then push,id,tmp[9] else push,id,''
        endif else begin
           push,syserr,0.0
           push,lim,ROUND(FLOAT(tmp[3]))
           push,unit,tmp[4]
           push,ref,tmp[5]
           ;; if n gt 6 then push,note1,tmp[6] else push,note1,''
           ;; if n gt 7 then push,note2,tmp[7] else push,note2,''
           ;; if n gt 8 then push,id,tmp[8] else push,id,''
        endelse
     endif
  endfor

  ;; rawdata
  rawdata = ls
  flux = meas
  err = errs

  rawphot = {nphot:nphot,band:band,meas:meas,err:err,syserr:syserr,unit:unit,lim:lim,ref:ref,note1:STRARR(nphot),note2:STRARR(nphot),id:STRARR(nphot),irs:{ok:0,other:''}}

  if N_ELEMENTS(xdr) eq 0 then STOP,'SEDFIT_LOADCSV: couldnt assign a name for the xdr file'

  ;; align and then add IRS spectra, just use first one here
  if N_ELEMENTS(irsfile) ne 0 then begin
     irsfile = irsfile[0]
     base = base+'-irsstare'
     align_cassis_spec,fits=irsfile,name=name,filebase=base
     rawphot = sedfit_addirs(rawphot,irsfile=base+'.txt')
  endif

  stinf = {ntries:0,name:name,spty:spty,teff:teff,tefferr:tefferr,logg:logg,mh:mh,av:av,dist:dist}

  ;; save it
  save,filename=xdr,rawdata,rawphot,stinf

end
